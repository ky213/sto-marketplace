# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: INFO
    io.github.jhipster: INFO
    swiss.alpinetech.exchange: INFO

management:
  metrics:
    export:
      prometheus:
        enabled: false

spring:
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/exchange?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: root
    password:
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jpa:
    show-sql: false
  data:
    jest:
      uri: http://localhost:9200
  # see https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-nosql.html#boot-features-connecting-to-elasticsearch-jest
  elasticsearch:
    rest:
      uris: http://localhost:9200
  # Replace by 'prod, faker' to add the faker context and have sample data loaded in production
  liquibase:
    contexts: prod
  mail:
    host: localhost
    port: 25
    username:
    password:
  thymeleaf:
    cache: true

  activemq:
    broker-url: tcp://localhost:61616
    user: admin
    password: admin
    pool:
      enabled: true
      max-connections: 50
# ===================================================================
# To enable TLS in production, generate a certificate using:
# keytool -genkey -alias exchange -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 443
#    ssl:
#        key-store: classpath:config/tls/keystore.p12
#        key-store-password: password
#        key-store-type: PKCS12
#        key-alias: exchange
#        # The ciphers suite enforce the security by deactivating some old and deprecated SSL cipher, this list was tested against SSL Labs (https://www.ssllabs.com/ssltest/)
#        ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
# ===================================================================
server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024

# ===================================================================
# Exchange specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  http:
    cache: # Used by the CachingHttpHeadersFilter
      timeToLiveInDays: 1461
  cache: # Cache configuration
    ehcache: # Ehcache configuration
      time-to-live-seconds: 3600 # By default objects stay 1 hour in the cache
      max-entries: 1000 # Number of objects in each cache entry
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        # As this is the PRODUCTION configuration, you MUST change the default key, and store it securely:
        # - In the JHipster Registry (which includes a Spring Cloud Config server)
        # - In a separate `application-prod.yml` file, in the same folder as your executable JAR file
        # - In the `JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET` environment variable
        base64-secret: OTE5MDRlYjNkYWY3ZGE3NmMwNTNiMmY5MTM0NTViODc1ZTAxN2JhOWY1NTM1NzJlOGRhYzZiMTY3ZDJmZTg2NDE1NTkxOGMxZWJiMTU1NmU1Y2QwY2I3YTQ0OGJkOTZlNDY0NWM1MWI2OWQ3NDViZjNkZmJmMjA2MmNmMTAyYWY=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://my-server-url-to-change # Modify according to your server's URL
  metrics:
    logs: # Reports metrics in the logs
      enabled: false
      report-frequency: 60 # in seconds
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  audit-events:
    retention-period: 30 # Number of days before audit events are deleted.

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:

avaloq-sandbox-host: https://api-qwgzy.emea.sandbox.avaloq.com
avaloq-token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJhdWQiOiJzYW5kYm94Iiwic3ViIjoieHNlY2F6Iiwiand0IjoiZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKU1V6VXhNaUo5LmV5SmhkV1FpT2lKQlZrRk1UMUVpTENKemRXSWlPaUpEU1UwaUxDSmhkbkZmY205c1pYTWlPbHNpY205c1pWOWhkM05mZFhObGNpSmRMQ0pwYzNNaU9pSktWMVJRY205MmFXUmxjaUlzSW1WNGNDSTZNVFU1TlRZNE5qZzNNeXdpYVdGMElqb3hOVGsxTmpjeU5EY3pMQ0poZG1Gc2IzRmZZblZmYVdRaU9pSTVJaXdpYW5ScElqb2lVV05OYVVJNGVqZEZPVmh4VW5ob1FUQlFXVWQwZHlJc0ltRjJjVjlpZFNJNklrRkJRU0o5LnEwWExLWTJxek43d0hsRm1tZWk4R3NnVm9JX19fREVpMnVWNFRJVmt0MGV1cFRUUjFPR1pjUFZpUDBmTW5qaW5IVFo3aVhtQm51b3k2NU81UkM2Y0JtcWFSdGI0VXBDOVpfR1JWM1QydThpSlAtSDNhcEQxRUZPVjdjbmgzVEgycE9tVFBaYm5ISUQ5MDFUYnVaZXRmQnBsOTlweDRQZTY5WFB3ajZEQ1hieFV0VkRsTk91REJaWmpBcm5EU3NSS2d4S3ZWMk1idnQzSHNoSnpQaEdRNnYwQlVFeU5nb2xTR2VqZFZXMi1uMnNNa09VcjhJLWJ5ZlI3YXdBSzMyRjhES19tTFQ3T1NPQWhhcjQ4TkE2SlRRT3R5NkVSQThiNjl5czVQcmFXZ19IRnFOZnJsUXo3N2oxMkNiNkxzdV94eFVwUFpKbThTVzByV1JWMXZ0UlR3dyIsImlzcyI6IkpXVFByb3ZpZGVyIiwic2ItaWQiOiJxd2d6eSIsImV4cCI6MTU5NTY4Njg3MywiaWF0IjoxNTk1NjcyNDczLCJqdGkiOiJfY2pCRm5zVHB4MDNSVFhvVTJHdGZnIn0.kKmJekg0oOBrq3jiHKUHwRTvbu3M3r0YaD6C_-2txdMpHQTsavEjCk4DQGb7t34-CgAv7RLkuUIO97df_QlfWU52GjyMDJm_EzwNmE1xWiK3oxFoAPFTUKm15grvPtSHoI9pSGEctsjBVJMps9oOKVLqpYZe-Duted01iJf7-NKPBbGrcSTXV5pRbOYZ_3n5tLjp802tBOvlty7m6DPabij45dRYXvKf7WsQJ4oNAucD7qqE8PSYhK7nuCKFT2z9ETpebuaFgXeviIIk6ys15Gk4bGcpUCTNRKUQvKhPmw2n_O3h_ahUeLfhvxG-teeGxsm4wcFKACP9wW2E1w6DZg
